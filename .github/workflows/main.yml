name: Pack and Publish NuGet Packages

on:
  push:
    branches: [ main ]  # Trigger on pushes to the main branch

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest  # Or your preferred runner

    steps:
      - uses: actions/checkout@v4  # Checkout code from repository

      - name: Use NuGet CLI
        uses: nuget/setup-nuget@v2  # Install the NuGet CLI

      - name: Use Dotnet CLI
        uses: actions/setup-dotnet@v4 # Install the Dotnet CLI
        with:
          dotnet-version: 8
          
      - name: Restore dependencies
        run: nuget restore ./GameEngine.sln  # Replace with your solution file path
    
      - name: Pack GameEngine
        run: |
          dotnet pack ./GameEngine/GameEngine.csproj /p:PackageVersion=1.2.3 -o ./nuget_packages

      - name: Pack GameEngine.Core
        run: |
          dotnet pack ./GameEngine.Core/GameEngine.Core.csproj /p:PackageVersion=1.2.3 -o ./nuget_packages

      - name: Pack GraphicsEngine
        run: |
          dotnet pack ./GraphicsEngine/GraphicsEngine.csproj /p:PackageVersion=1.2.3 -o ./nuget_packages

      - name: Pack PhysicsEngine
        run: |
          dotnet pack ./PhysicsEngine/PhysicsEngine.csproj /p:PackageVersion=1.2.3 -o ./nuget_packages

      - name: Pack SoundEngine
        run: |
          dotnet pack ./SoundEngine/SoundEngine.csproj /p:PackageVersion=1.2.3 -o ./nuget_packages

      - name: Pack InputEngine
        run: |
          dotnet pack ./InputEngine/InputEngine.csproj /p:PackageVersion=1.2.3 -o ./nuget_packages

      - name: Publish NuGet packages
        run: |
          nuget push ./nuget_packages/*.nupkg ${{ secrets.NUGET_API_KEY }}
